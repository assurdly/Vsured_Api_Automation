{"uid":"2b4072c0d77b76d3","name":"Register- Successful","fullName":"Auth/Register#Register- Successful","historyId":"2158aa70-61d5-40e5-b969-da2d33ce6ff3","time":{"start":1707544493446,"stop":1707544523937,"duration":30491},"status":"failed","statusMessage":"Verify that Status code is 200, Verify that status returns Success, Verify that message returns Successfully registered user, Verify that data exist","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 200, Verify that status returns Success, Verify that message returns Successfully registered user, Verify that data exist","steps":[{"name":"Verify that Status code is 200","time":{"start":1707544523925,"stop":1707544523925,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 503","statusTrace":"Error: expected response to have status code 200 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that status returns Success","time":{"start":1707544523928,"stop":1707544523928,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns Successfully registered user","time":{"start":1707544523929,"stop":1707544523929,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data exist","time":{"start":1707544523930,"stop":1707544523930,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5b08915e8ae4ad88","name":"Request Headers","source":"5b08915e8ae4ad88.json","type":"application/json","size":354},{"uid":"9ab32c1d3248af54","name":"Request Body","source":"9ab32c1d3248af54.txt","type":"text/plain","size":337},{"uid":"7fe1962e4ddacbfa","name":"Response Headers","source":"7fe1962e4ddacbfa.json","type":"application/json","size":774},{"uid":"cd2e6b92df7371e0","name":"Response Body","source":"cd2e6b92df7371e0.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2b4072c0d77b76d3.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register","503"]}