{"uid":"744833c187f4ce09","name":"Create Community-Empty Address","fullName":"Community/Create Community#Create Community-Empty Address","historyId":"7a342ef0-f344-43e6-b7c8-1c65016656cb","time":{"start":1708689368170,"stop":1708689368217,"duration":47},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Address field is required, Verify that path returns Address","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Address field is required, Verify that path returns Address","steps":[{"name":"Verify that Status code is 400","time":{"start":1708689368214,"stop":1708689368214,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1708689368215,"stop":1708689368215,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns Address field is required","time":{"start":1708689368215,"stop":1708689368215,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns Address","time":{"start":1708689368216,"stop":1708689368216,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"468b4f19fe0b2f60","name":"Request Headers","source":"468b4f19fe0b2f60.json","type":"application/json","size":400},{"uid":"182e93057bc16856","name":"Request Body","source":"182e93057bc16856.txt","type":"text/plain","size":145},{"uid":"deae8e2bff32e33e","name":"Response Headers","source":"deae8e2bff32e33e.json","type":"application/json","size":786},{"uid":"9cb9b85c195624c9","name":"Response Body","source":"9cb9b85c195624c9.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Community"},{"name":"suite","value":"Create Community"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/community/create"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"744833c187f4ce09.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/community/create","503"]}