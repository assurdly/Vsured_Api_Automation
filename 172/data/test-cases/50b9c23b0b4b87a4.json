{"uid":"50b9c23b0b4b87a4","name":"Register-Empty Password Field","fullName":"Auth/Register#Register-Empty Password Field","historyId":"bb9495fe-5f27-4592-9cfb-5c3fd2149d34","time":{"start":1708691574599,"stop":1708691574814,"duration":215},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Password is required, Verify that path returns Password","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Password is required, Verify that path returns Password","steps":[{"name":"Verify that Status code is 400","time":{"start":1708691574809,"stop":1708691574809,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1708691574810,"stop":1708691574810,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns Password is required","time":{"start":1708691574810,"stop":1708691574810,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns Password","time":{"start":1708691574811,"stop":1708691574811,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9527e04b1b9d7e89","name":"ConsoleLogs","source":"9527e04b1b9d7e89.txt","type":"text/plain","size":162},{"uid":"561c89d8fb2ba43","name":"Request Headers","source":"561c89d8fb2ba43.json","type":"application/json","size":315},{"uid":"22b596af55e9cc6e","name":"Response Headers","source":"22b596af55e9cc6e.json","type":"application/json","size":778},{"uid":"7b8de59e765c67a5","name":"Response Body","source":"7b8de59e765c67a5.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"50b9c23b0b4b87a4.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register","503"]}