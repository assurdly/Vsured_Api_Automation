{"uid":"a3d22cd4729ee5b0","name":"Login- Wrong channel and correct password","fullName":"Auth/Login#Login- Wrong channel and correct password","historyId":"2cce10c1-2baa-4ed1-b5d1-8e1bc67f9413","time":{"start":1708928603223,"stop":1708928603451,"duration":228},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that Status is Success, Verify that response message includes invalid phone number","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that Status is Success, Verify that response message includes invalid phone number","steps":[{"name":"Verify that Status code is 400","time":{"start":1708928603448,"stop":1708928603448,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that Status is Success","time":{"start":1708928603449,"stop":1708928603449,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that response message includes invalid phone number","time":{"start":1708928603449,"stop":1708928603449,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"16aba33e93398e47","name":"Request Headers","source":"16aba33e93398e47.json","type":"application/json","size":353},{"uid":"69c8ae055c16c493","name":"Request Body","source":"69c8ae055c16c493.txt","type":"text/plain","size":56},{"uid":"3cc1a7ba0d0546b9","name":"Response Headers","source":"3cc1a7ba0d0546b9.json","type":"application/json","size":774},{"uid":"bde12754b408bfbc","name":"Response Body","source":"bde12754b408bfbc.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/login"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a3d22cd4729ee5b0.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/login","503"]}