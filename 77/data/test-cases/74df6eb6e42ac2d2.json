{"uid":"74df6eb6e42ac2d2","name":"RefreshToken- Empty RefreshToken field","fullName":"Auth/Refresh Token#RefreshToken- Empty RefreshToken field","historyId":"b3b6aa4a-c62e-4d7a-99df-f6c34f71ab42","time":{"start":1708085870832,"stop":1708085870929,"duration":97},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns RefreshToken is required, Verify that path returns RefreshToken","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns RefreshToken is required, Verify that path returns RefreshToken","steps":[{"name":"Verify that Status code is 400","time":{"start":1708085870925,"stop":1708085870925,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 403","statusTrace":"Error: expected response to have status code 400 but got 403\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Verify that type returns field","time":{"start":1708085870926,"stop":1708085870926,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'type')","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Verify that message returns RefreshToken is required","time":{"start":1708085870927,"stop":1708085870927,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'msg')","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Verify that path returns RefreshToken","time":{"start":1708085870927,"stop":1708085870927,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'path')","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"7696580f1f7dd2c7","name":"Request Headers","source":"7696580f1f7dd2c7.json","type":"application/json","size":400},{"uid":"54638c979c362d2f","name":"Request Body","source":"54638c979c362d2f.txt","type":"text/plain","size":54},{"uid":"dcf79f6dd8478ab7","name":"Response Headers","source":"dcf79f6dd8478ab7.json","type":"application/json","size":888},{"uid":"f7a567d7775e796","name":"Response Body","source":"f7a567d7775e796.txt","type":"text/plain","size":64}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Refresh Token"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken"},{"name":"Response Code","value":"403"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"74df6eb6e42ac2d2.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken","403"]}