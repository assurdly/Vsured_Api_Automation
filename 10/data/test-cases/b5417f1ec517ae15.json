{"uid":"b5417f1ec517ae15","name":"Login- Empty Channel field","fullName":"Auth/Login#Login- Empty Channel field","historyId":"bd451383-df84-43dc-80c2-0f556860b59f","time":{"start":1706701948074,"stop":1706701953139,"duration":5065},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message includes Channel is required, Verify that path returns Channel","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message includes Channel is required, Verify that path returns Channel","steps":[{"name":"Verify that Status code is 400","time":{"start":1706701953135,"stop":1706701953135,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that type returns field","time":{"start":1706701953136,"stop":1706701953136,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that message includes Channel is required","time":{"start":1706701953136,"stop":1706701953136,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that path returns Channel","time":{"start":1706701953137,"stop":1706701953137,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true}],"attachments":[{"uid":"21688819104f69cf","name":"Request Headers","source":"21688819104f69cf.json","type":"application/json","size":353},{"uid":"bccf453e82ab3c1e","name":"Request Body","source":"bccf453e82ab3c1e.txt","type":"text/plain","size":45},{"uid":"f88aa01c83073687","name":"Response Headers","source":"f88aa01c83073687.json","type":"application/json","size":786},{"uid":"831ee07a677e1ae4","name":"Response Body","source":"831ee07a677e1ae4.txt","type":"text/plain","size":506}],"parameters":[],"attachmentStep":false,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/login"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b5417f1ec517ae15.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/login","503"]}