{"uid":"5ad7d3db5c19a3b3","name":"RefreshToken- Empty RefreshToken field","fullName":"Auth/Refresh Token#RefreshToken- Empty RefreshToken field","historyId":"7cc89bc8-4b21-4954-97d4-487d8011c790","time":{"start":1707546630639,"stop":1707546630752,"duration":113},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns RefreshToken is required, Verify that path returns RefreshToken","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns RefreshToken is required, Verify that path returns RefreshToken","steps":[{"name":"Verify that Status code is 400","time":{"start":1707546630747,"stop":1707546630747,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 403","statusTrace":"Error: expected response to have status code 400 but got 403\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that type returns field","time":{"start":1707546630748,"stop":1707546630748,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'type')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that message returns RefreshToken is required","time":{"start":1707546630749,"stop":1707546630749,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'msg')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that path returns RefreshToken","time":{"start":1707546630750,"stop":1707546630750,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'path')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[{"uid":"39a1353b6eda9f33","name":"Request Headers","source":"39a1353b6eda9f33.json","type":"application/json","size":400},{"uid":"c705c29651e7cbfd","name":"Request Body","source":"c705c29651e7cbfd.txt","type":"text/plain","size":54},{"uid":"b681256a93ffdbfc","name":"Response Headers","source":"b681256a93ffdbfc.json","type":"application/json","size":888},{"uid":"7fc33ee6f1dcf738","name":"Response Body","source":"7fc33ee6f1dcf738.txt","type":"text/plain","size":64}],"parameters":[],"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Refresh Token"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken"},{"name":"Response Code","value":"403"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5ad7d3db5c19a3b3.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken","403"]}