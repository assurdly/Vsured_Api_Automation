{"uid":"2ca8a02c9f96020f","name":"Login- Wrong channel and correct password","fullName":"Auth/Login#Login- Wrong channel and correct password","historyId":"4596c21d-1799-44f4-b233-1bd117b0f468","time":{"start":1708691276821,"stop":1708691276898,"duration":77},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that Status is Success, Verify that response message includes invalid phone number","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that Status is Success, Verify that response message includes invalid phone number","steps":[{"name":"Verify that Status code is 400","time":{"start":1708691276895,"stop":1708691276895,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that Status is Success","time":{"start":1708691276896,"stop":1708691276896,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that response message includes invalid phone number","time":{"start":1708691276896,"stop":1708691276896,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4a81f3333aa0fea1","name":"Request Headers","source":"4a81f3333aa0fea1.json","type":"application/json","size":353},{"uid":"8c040a23eb0a9a69","name":"Request Body","source":"8c040a23eb0a9a69.txt","type":"text/plain","size":56},{"uid":"a5e4aceac2135e12","name":"Response Headers","source":"a5e4aceac2135e12.json","type":"application/json","size":786},{"uid":"bf9ff5beef9a051a","name":"Response Body","source":"bf9ff5beef9a051a.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/login"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2ca8a02c9f96020f.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/login","503"]}