{"uid":"d5286a0f9bf549c2","name":"Send OTP to RegIstered Email- Empty Medium Field","fullName":"Auth/Send OTP to Registered Email#Send OTP to RegIstered Email- Empty Medium Field","historyId":"b60e176c-9528-434b-b6c0-4c31d76b2729","time":{"start":1708253195081,"stop":1708253195130,"duration":49},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Medium is required, Verify that path returns Medium","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Medium is required, Verify that path returns Medium","steps":[{"name":"Verify that Status code is 400","time":{"start":1708253195124,"stop":1708253195124,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1708253195125,"stop":1708253195125,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns Medium is required","time":{"start":1708253195126,"stop":1708253195126,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns Medium","time":{"start":1708253195127,"stop":1708253195127,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"10d7cd06879862a3","name":"Request Headers","source":"10d7cd06879862a3.json","type":"application/json","size":400},{"uid":"1ba4beb0637600b1","name":"Request Body","source":"1ba4beb0637600b1.txt","type":"text/plain","size":48},{"uid":"2cf0e2daf395442e","name":"Response Headers","source":"2cf0e2daf395442e.json","type":"application/json","size":778},{"uid":"abbfd098e394816a","name":"Response Body","source":"abbfd098e394816a.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Send OTP to Registered Email"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register/sendMail"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d5286a0f9bf549c2.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register/sendMail","503"]}