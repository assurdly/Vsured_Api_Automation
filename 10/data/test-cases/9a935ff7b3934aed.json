{"uid":"9a935ff7b3934aed","name":"Register- Already registered PhoneNo","fullName":"Auth/Register#Register- Already registered PhoneNo","historyId":"e1e3ed2d-88cf-428b-b357-547cc1b6abaa","time":{"start":1706701857056,"stop":1706701887154,"duration":30098},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that status returns failed, Verify that message returns User with this Phone already exist","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that status returns failed, Verify that message returns User with this Phone already exist","steps":[{"name":"Verify that Status code is 400","time":{"start":1706701887150,"stop":1706701887150,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that status returns failed","time":{"start":1706701887150,"stop":1706701887150,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that message returns User with this Phone already exist","time":{"start":1706701887151,"stop":1706701887151,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true}],"attachments":[{"uid":"8d8c3986deeead2b","name":"Request Headers","source":"8d8c3986deeead2b.json","type":"application/json","size":354},{"uid":"abd02b611f985bdf","name":"Request Body","source":"abd02b611f985bdf.txt","type":"text/plain","size":333},{"uid":"8b6cfde58d815043","name":"Response Headers","source":"8b6cfde58d815043.json","type":"application/json","size":782},{"uid":"c8bbb7a08039433e","name":"Response Body","source":"c8bbb7a08039433e.txt","type":"text/plain","size":506}],"parameters":[],"attachmentStep":false,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9a935ff7b3934aed.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register","503"]}