{"uid":"e7731b8f38eff4c3","name":"RefreshToken- Wrong Refresh Token","fullName":"Auth/Refresh Token#RefreshToken- Wrong Refresh Token","historyId":"d9a6ae9e-31da-4d3a-94a6-b21690459346","time":{"start":1708205884346,"stop":1708205884590,"duration":244},"status":"failed","statusMessage":"Verify that Status code is 401, Verify that status returns status, Verify that message returns UnAuthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 401, Verify that status returns status, Verify that message returns UnAuthorized","steps":[{"name":"Verify that Status code is 401","time":{"start":1708205884584,"stop":1708205884584,"duration":0},"status":"failed","statusMessage":"expected response to have status code 401 but got 503","statusTrace":"Error: expected response to have status code 401 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Verify that status returns status","time":{"start":1708205884585,"stop":1708205884585,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Verify that message returns UnAuthorized","time":{"start":1708205884585,"stop":1708205884585,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"1f158ef3b2db9d1b","name":"Request Headers","source":"1f158ef3b2db9d1b.json","type":"application/json","size":400},{"uid":"e195252f874c7367","name":"Request Body","source":"e195252f874c7367.txt","type":"text/plain","size":222},{"uid":"f13c114eb9cb80","name":"Response Headers","source":"f13c114eb9cb80.json","type":"application/json","size":786},{"uid":"400ca1e69267f56a","name":"Response Body","source":"400ca1e69267f56a.txt","type":"text/plain","size":506}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Refresh Token"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e7731b8f38eff4c3.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken","503"]}