{"uid":"483aa4e16792a09c","name":"Register-Empty Address Field","fullName":"Auth/Register#Register-Empty Address Field","historyId":"da4c21b0-f7c8-40b9-a1a1-7482ce48c273","time":{"start":1708334578645,"stop":1708334578764,"duration":119},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Address is required, Verify that path returns Address","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Address is required, Verify that path returns Address","steps":[{"name":"Verify that Status code is 400","time":{"start":1708334578760,"stop":1708334578760,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1708334578760,"stop":1708334578760,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns Address is required","time":{"start":1708334578761,"stop":1708334578761,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns Address","time":{"start":1708334578761,"stop":1708334578761,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7b671dcf662d2a9","name":"ConsoleLogs","source":"7b671dcf662d2a9.txt","type":"text/plain","size":162},{"uid":"670af64bd3415055","name":"Request Headers","source":"670af64bd3415055.json","type":"application/json","size":315},{"uid":"5530e427d23c8220","name":"Response Headers","source":"5530e427d23c8220.json","type":"application/json","size":782},{"uid":"766448c841f73bd6","name":"Response Body","source":"766448c841f73bd6.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"483aa4e16792a09c.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register","503"]}