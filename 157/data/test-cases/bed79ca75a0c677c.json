{"uid":"bed79ca75a0c677c","name":"Registeration Verification- Empty Token field","fullName":"Auth/Registration Verification#Registeration Verification- Empty Token field","historyId":"17e5ec86-528b-40d2-84b1-1311f4a19dfd","time":{"start":1708255330133,"stop":1708255330332,"duration":199},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that response message returns Token is required, Verify that path returns Token","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that response message returns Token is required, Verify that path returns Token","steps":[{"name":"Verify that Status code is 400","time":{"start":1708255330328,"stop":1708255330328,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1708255330329,"stop":1708255330329,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that response message returns Token is required","time":{"start":1708255330329,"stop":1708255330329,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns Token","time":{"start":1708255330330,"stop":1708255330330,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"755c26a30b3a677b","name":"Request Headers","source":"755c26a30b3a677b.json","type":"application/json","size":400},{"uid":"6341d5f5e1f651e2","name":"Request Body","source":"6341d5f5e1f651e2.txt","type":"text/plain","size":47},{"uid":"22ef320f90fb7314","name":"Response Headers","source":"22ef320f90fb7314.json","type":"application/json","size":782},{"uid":"b409c1fac4cefc4f","name":"Response Body","source":"b409c1fac4cefc4f.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Registration Verification"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register/verify"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"bed79ca75a0c677c.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register/verify","503"]}