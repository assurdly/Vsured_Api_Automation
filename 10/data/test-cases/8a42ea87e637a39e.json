{"uid":"8a42ea87e637a39e","name":"Register- Empty Email Address","fullName":"Auth/Register#Register- Empty Email Address","historyId":"5c223cb8-982b-44e2-832e-cb93f91edaf9","time":{"start":1706701917585,"stop":1706701947623,"duration":30038},"status":"failed","statusMessage":"Verify that Status code is 200, Verify that status returns Success, Verify that message returns Successfully registered user, Verify that data exist","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 200, Verify that status returns Success, Verify that message returns Successfully registered user, Verify that data exist","steps":[{"name":"Verify that Status code is 200","time":{"start":1706701947619,"stop":1706701947619,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 503","statusTrace":"Error: expected response to have status code 200 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that status returns Success","time":{"start":1706701947619,"stop":1706701947619,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that message returns Successfully registered user","time":{"start":1706701947620,"stop":1706701947620,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that data exist","time":{"start":1706701947621,"stop":1706701947621,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true}],"attachments":[{"uid":"51a81116fb9fcee7","name":"Request Headers","source":"51a81116fb9fcee7.json","type":"application/json","size":354},{"uid":"f079ea95e7fb1d19","name":"Request Body","source":"f079ea95e7fb1d19.txt","type":"text/plain","size":317},{"uid":"4cd5224530c78472","name":"Response Headers","source":"4cd5224530c78472.json","type":"application/json","size":774},{"uid":"3a96fc66103a694a","name":"Response Body","source":"3a96fc66103a694a.txt","type":"text/plain","size":506}],"parameters":[],"attachmentStep":false,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8a42ea87e637a39e.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register","503"]}