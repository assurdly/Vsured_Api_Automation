{"uid":"f13f6f806d104fc0","name":"RefreshToken- Empty RefreshToken field","fullName":"Auth/Refresh Token#RefreshToken- Empty RefreshToken field","historyId":"34eb9571-cfb0-4bec-a316-532049f21c63","time":{"start":1707644067775,"stop":1707644067839,"duration":64},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns RefreshToken is required, Verify that path returns RefreshToken","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns RefreshToken is required, Verify that path returns RefreshToken","steps":[{"name":"Verify that Status code is 400","time":{"start":1707644067836,"stop":1707644067836,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 403","statusTrace":"Error: expected response to have status code 400 but got 403\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1707644067836,"stop":1707644067836,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'type')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns RefreshToken is required","time":{"start":1707644067837,"stop":1707644067837,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'msg')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns RefreshToken","time":{"start":1707644067838,"stop":1707644067838,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'path')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ee139bb615924acc","name":"Request Headers","source":"ee139bb615924acc.json","type":"application/json","size":400},{"uid":"2195ede7e9296dae","name":"Request Body","source":"2195ede7e9296dae.txt","type":"text/plain","size":54},{"uid":"764316af2ec2c157","name":"Response Headers","source":"764316af2ec2c157.json","type":"application/json","size":884},{"uid":"df0d5a7af74a2626","name":"Response Body","source":"df0d5a7af74a2626.txt","type":"text/plain","size":64}],"parameters":[],"stepsCount":4,"shouldDisplayMessage":true,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Refresh Token"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken"},{"name":"Response Code","value":"403"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f13f6f806d104fc0.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken","403"]}