{"uid":"2b44d744a739a3c8","name":"Send OTP to RegIstered Email-Invalid Channel details","fullName":"Auth/Send OTP to Registered Email#Send OTP to RegIstered Email-Invalid Channel details","historyId":"80e7f246-1f3e-4d98-94f7-77d9227f12d7","time":{"start":1708094637830,"stop":1708094637898,"duration":68},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Channel is invalid, Verify that path returns Email","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Channel is invalid, Verify that path returns Email","steps":[{"name":"Verify that Status code is 400","time":{"start":1708094637893,"stop":1708094637893,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"Error: expected response to have status code 400 but got 200\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0},{"name":"Verify that type returns field","time":{"start":1708094637894,"stop":1708094637894,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'type')","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0},{"name":"Verify that message returns Channel is invalid","time":{"start":1708094637895,"stop":1708094637895,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'msg')","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0},{"name":"Verify that path returns Email","time":{"start":1708094637896,"stop":1708094637896,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'path')","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0}],"attachments":[{"uid":"568c573179146fc3","name":"Request Headers","source":"568c573179146fc3.json","type":"application/json","size":400},{"uid":"b08ba90acade4680","name":"Request Body","source":"b08ba90acade4680.txt","type":"text/plain","size":48},{"uid":"1d2de87aa6e2a7e2","name":"Response Headers","source":"1d2de87aa6e2a7e2.json","type":"application/json","size":888},{"uid":"71326876aab2f78b","name":"Response Body","source":"71326876aab2f78b.txt","type":"text/plain","size":85}],"parameters":[],"attachmentsCount":4,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":4},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Send OTP to Registered Email"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register/sendMail"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2b44d744a739a3c8.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register/sendMail","200"]}