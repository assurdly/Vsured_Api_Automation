{"uid":"17d7607627540e6","name":"Registeration Verification- Token with alphabets and special characters","fullName":"Auth/Registration Verification#Registeration Verification- Token with alphabets and special characters","historyId":"7adb9d89-0c60-4e8b-857e-4fe8a68b1f24","time":{"start":1709020475870,"stop":1709020476898,"duration":1028},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that response status returns failed, Verify that response message includes Email Verification failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that response status returns failed, Verify that response message includes Email Verification failed","steps":[{"name":"Verify that Status code is 400","time":{"start":1709020476895,"stop":1709020476895,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that response status returns failed","time":{"start":1709020476896,"stop":1709020476896,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that response message includes Email Verification failed","time":{"start":1709020476896,"stop":1709020476896,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e8e1ad7df3fea74b","name":"Request Headers","source":"e8e1ad7df3fea74b.json","type":"application/json","size":400},{"uid":"26beb7cd0bbd9a0d","name":"Request Body","source":"26beb7cd0bbd9a0d.txt","type":"text/plain","size":53},{"uid":"5da1fd1fbfa1e9ed","name":"Response Headers","source":"5da1fd1fbfa1e9ed.json","type":"application/json","size":782},{"uid":"cc27a6aa65bda0c9","name":"Response Body","source":"cc27a6aa65bda0c9.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Registration Verification"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register/verify"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"17d7607627540e6.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register/verify","503"]}