{"uid":"99b422f5c8aa93f1","name":"Create Community-Empty name field","fullName":"Community/Create Community#Create Community-Empty name field","historyId":"9d64406b-96e5-4817-8b39-eaaaf08d25e7","time":{"start":1708587287448,"stop":1708587287695,"duration":247},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Name is required, Verify that path returns Name","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Name is required, Verify that path returns Name","steps":[{"name":"Verify that Status code is 400","time":{"start":1708587287691,"stop":1708587287691,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1708587287692,"stop":1708587287692,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns Name is required","time":{"start":1708587287692,"stop":1708587287692,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns Name","time":{"start":1708587287693,"stop":1708587287693,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a8f36fd8ba30f89","name":"Request Headers","source":"a8f36fd8ba30f89.json","type":"application/json","size":400},{"uid":"bd5cbdb5a9a3f04d","name":"Request Body","source":"bd5cbdb5a9a3f04d.txt","type":"text/plain","size":143},{"uid":"1395f38fad797532","name":"Response Headers","source":"1395f38fad797532.json","type":"application/json","size":778},{"uid":"360f5a5c86fa640e","name":"Response Body","source":"360f5a5c86fa640e.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Community"},{"name":"suite","value":"Create Community"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/community/create"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"99b422f5c8aa93f1.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/community/create","503"]}