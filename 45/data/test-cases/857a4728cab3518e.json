{"uid":"857a4728cab3518e","name":"Register- Empty First name field","fullName":"Auth/Register#Register- Empty First name field","historyId":"32bc1bfd-b349-422e-8ab4-2291f0a57f6d","time":{"start":1707645913622,"stop":1707645943834,"duration":30212},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns FirstName is required, Verify that path returns FirstName","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns FirstName is required, Verify that path returns FirstName","steps":[{"name":"Verify that Status code is 400","time":{"start":1707645943828,"stop":1707645943828,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1707645943829,"stop":1707645943829,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns FirstName is required","time":{"start":1707645943829,"stop":1707645943829,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns FirstName","time":{"start":1707645943830,"stop":1707645943830,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"bb6e67aab7afcfd9","name":"Request Headers","source":"bb6e67aab7afcfd9.json","type":"application/json","size":354},{"uid":"541b6873bd39d405","name":"Request Body","source":"541b6873bd39d405.txt","type":"text/plain","size":328},{"uid":"a8388150540df159","name":"Response Headers","source":"a8388150540df159.json","type":"application/json","size":778},{"uid":"fd0f4290c74423bf","name":"Response Body","source":"fd0f4290c74423bf.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"857a4728cab3518e.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register","503"]}