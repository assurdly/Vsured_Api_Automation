{"uid":"675c00d102c2a986","name":"RefreshToken- Empty channel field","fullName":"Auth/Refresh Token#RefreshToken- Empty channel field","historyId":"262f979c-170f-4358-a532-dad3d6b2a940","time":{"start":1707999696695,"stop":1707999696725,"duration":30},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message includes Channel is required, Verify that path returns Channel","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message includes Channel is required, Verify that path returns Channel","steps":[{"name":"Verify that Status code is 400","time":{"start":1707999696721,"stop":1707999696721,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 403","statusTrace":"Error: expected response to have status code 400 but got 403\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that type returns field","time":{"start":1707999696722,"stop":1707999696722,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'type')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that message includes Channel is required","time":{"start":1707999696722,"stop":1707999696722,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'msg')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that path returns Channel","time":{"start":1707999696723,"stop":1707999696723,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'path')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[{"uid":"3aad7dea01d1c0eb","name":"Request Headers","source":"3aad7dea01d1c0eb.json","type":"application/json","size":401},{"uid":"a99e22bf8ed6a8c6","name":"Request Body","source":"a99e22bf8ed6a8c6.txt","type":"text/plain","size":211},{"uid":"aef3790b7b34e55b","name":"Response Headers","source":"aef3790b7b34e55b.json","type":"application/json","size":896},{"uid":"fb6dfdb393859a48","name":"Response Body","source":"fb6dfdb393859a48.txt","type":"text/plain","size":64}],"parameters":[],"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Refresh Token"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken"},{"name":"Response Code","value":"403"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"675c00d102c2a986.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken","403"]}