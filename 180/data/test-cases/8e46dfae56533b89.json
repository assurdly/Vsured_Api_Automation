{"uid":"8e46dfae56533b89","name":"Create Community-Empty Address","fullName":"Community/Create Community#Create Community-Empty Address","historyId":"2b8ab116-966b-4ad1-a5d0-7e4dd91446cf","time":{"start":1710296850708,"stop":1710296850741,"duration":33},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Address field is required, Verify that path returns Address","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Address field is required, Verify that path returns Address","steps":[{"name":"Verify that Status code is 400","time":{"start":1710296850737,"stop":1710296850737,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1710296850738,"stop":1710296850738,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns Address field is required","time":{"start":1710296850738,"stop":1710296850738,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns Address","time":{"start":1710296850739,"stop":1710296850739,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f1084b1dc510bae2","name":"Request Headers","source":"f1084b1dc510bae2.json","type":"application/json","size":400},{"uid":"15b39d2dea9e9a60","name":"Request Body","source":"15b39d2dea9e9a60.txt","type":"text/plain","size":145},{"uid":"3741e0e430146536","name":"Response Headers","source":"3741e0e430146536.json","type":"application/json","size":774},{"uid":"79ddce222dc8a61b","name":"Response Body","source":"79ddce222dc8a61b.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Community"},{"name":"suite","value":"Create Community"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/community/create"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8e46dfae56533b89.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/community/create","503"]}