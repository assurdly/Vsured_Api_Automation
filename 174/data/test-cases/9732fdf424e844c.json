{"uid":"9732fdf424e844c","name":"Create Community-Empty Address","fullName":"Community/Create Community#Create Community-Empty Address","historyId":"cb1d7850-d606-4580-a7c9-7249e857f0a5","time":{"start":1709020478672,"stop":1709020478749,"duration":77},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Address field is required, Verify that path returns Address","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Address field is required, Verify that path returns Address","steps":[{"name":"Verify that Status code is 400","time":{"start":1709020478746,"stop":1709020478746,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1709020478747,"stop":1709020478747,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns Address field is required","time":{"start":1709020478747,"stop":1709020478747,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns Address","time":{"start":1709020478748,"stop":1709020478748,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3cb0a202cd48c2bd","name":"Request Headers","source":"3cb0a202cd48c2bd.json","type":"application/json","size":400},{"uid":"5dc8bb68862f5e46","name":"Request Body","source":"5dc8bb68862f5e46.txt","type":"text/plain","size":145},{"uid":"72f86d8e87292644","name":"Response Headers","source":"72f86d8e87292644.json","type":"application/json","size":778},{"uid":"ff9ed6ef94363f02","name":"Response Body","source":"ff9ed6ef94363f02.txt","type":"text/plain","size":506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Community"},{"name":"suite","value":"Create Community"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/community/create"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9732fdf424e844c.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/community/create","503"]}