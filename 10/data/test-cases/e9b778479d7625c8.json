{"uid":"e9b778479d7625c8","name":"RefreshToken- Empty channel field","fullName":"Auth/Refresh Token#RefreshToken- Empty channel field","historyId":"3790358e-658b-4eb1-8301-d89861a0450f","time":{"start":1706701953284,"stop":1706701953345,"duration":61},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns FirstName is required, Verify that path returns FirstName","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns FirstName is required, Verify that path returns FirstName","steps":[{"name":"Verify that Status code is 400","time":{"start":1706701953341,"stop":1706701953341,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that type returns field","time":{"start":1706701953342,"stop":1706701953342,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that message returns FirstName is required","time":{"start":1706701953342,"stop":1706701953342,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that path returns FirstName","time":{"start":1706701953343,"stop":1706701953343,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true}],"attachments":[{"uid":"26652d37c1b4fad8","name":"Request Headers","source":"26652d37c1b4fad8.json","type":"application/json","size":400},{"uid":"6d2bdb0239756fcf","name":"Request Body","source":"6d2bdb0239756fcf.txt","type":"text/plain","size":60},{"uid":"c316b0683e6411e","name":"Response Headers","source":"c316b0683e6411e.json","type":"application/json","size":778},{"uid":"625a6e37eaa3cbab","name":"Response Body","source":"625a6e37eaa3cbab.txt","type":"text/plain","size":506}],"parameters":[],"attachmentStep":false,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Refresh Token"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e9b778479d7625c8.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken","503"]}