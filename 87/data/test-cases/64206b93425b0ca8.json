{"uid":"64206b93425b0ca8","name":"RefreshToken- Empty RefreshToken field","fullName":"Auth/Refresh Token#RefreshToken- Empty RefreshToken field","historyId":"250e37c9-c044-4d0c-9996-b43735614d7c","time":{"start":1708090885700,"stop":1708090885763,"duration":63},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns RefreshToken is required, Verify that path returns RefreshToken","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns RefreshToken is required, Verify that path returns RefreshToken","steps":[{"name":"Verify that Status code is 400","time":{"start":1708090885760,"stop":1708090885760,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 403","statusTrace":"Error: expected response to have status code 400 but got 403\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1708090885760,"stop":1708090885760,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'type')","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns RefreshToken is required","time":{"start":1708090885761,"stop":1708090885761,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'msg')","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns RefreshToken","time":{"start":1708090885762,"stop":1708090885762,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'path')","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b994bb95ea05f444","name":"Request Headers","source":"b994bb95ea05f444.json","type":"application/json","size":400},{"uid":"9fdedff0b52e3a63","name":"Request Body","source":"9fdedff0b52e3a63.txt","type":"text/plain","size":54},{"uid":"e0805ad766169140","name":"Response Headers","source":"e0805ad766169140.json","type":"application/json","size":892},{"uid":"1df6448a2bee83f9","name":"Response Body","source":"1df6448a2bee83f9.txt","type":"text/plain","size":64}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Refresh Token"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken"},{"name":"Response Code","value":"403"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"64206b93425b0ca8.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken","403"]}