{"uid":"17238e8840af6860","name":"Register-Empty Date of Birth Field","fullName":"Auth/Register#Register-Empty Date of Birth Field","historyId":"52f91480-c77a-40f7-85d5-77451bc30416","time":{"start":1707643997391,"stop":1707644027573,"duration":30182},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Date of Birth is required, Verify that path returns DOB","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Date of Birth is required, Verify that path returns DOB","steps":[{"name":"Verify that Status code is 400","time":{"start":1707644027568,"stop":1707644027568,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that type returns field","time":{"start":1707644027569,"stop":1707644027569,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns Date of Birth is required","time":{"start":1707644027570,"stop":1707644027570,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that path returns DOB","time":{"start":1707644027570,"stop":1707644027570,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"274328b929a2489","name":"Request Headers","source":"274328b929a2489.json","type":"application/json","size":354},{"uid":"bb062d9e14f95b8b","name":"Request Body","source":"bb062d9e14f95b8b.txt","type":"text/plain","size":327},{"uid":"23f3fe898d520b6e","name":"Response Headers","source":"23f3fe898d520b6e.json","type":"application/json","size":782},{"uid":"7347c6b5232eef0d","name":"Response Body","source":"7347c6b5232eef0d.txt","type":"text/plain","size":506}],"parameters":[],"stepsCount":4,"shouldDisplayMessage":true,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"17238e8840af6860.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register","503"]}