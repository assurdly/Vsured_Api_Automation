{"uid":"317482da0b053e38","name":"RefreshToken- Empty RefreshToken field","fullName":"Auth/Refresh Token#RefreshToken- Empty RefreshToken field","historyId":"b51b748f-dc29-432a-978f-be86f2e5dfbb","time":{"start":1707999696727,"stop":1707999696757,"duration":30},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns RefreshToken is required, Verify that path returns RefreshToken","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns RefreshToken is required, Verify that path returns RefreshToken","steps":[{"name":"Verify that Status code is 400","time":{"start":1707999696754,"stop":1707999696754,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 403","statusTrace":"Error: expected response to have status code 400 but got 403\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that type returns field","time":{"start":1707999696754,"stop":1707999696754,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'type')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that message returns RefreshToken is required","time":{"start":1707999696755,"stop":1707999696755,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'msg')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that path returns RefreshToken","time":{"start":1707999696755,"stop":1707999696755,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'path')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[{"uid":"e02efdf9862e538f","name":"Request Headers","source":"e02efdf9862e538f.json","type":"application/json","size":400},{"uid":"b291e2bc7928eed","name":"Request Body","source":"b291e2bc7928eed.txt","type":"text/plain","size":54},{"uid":"7dbdc6ffc60aab7c","name":"Response Headers","source":"7dbdc6ffc60aab7c.json","type":"application/json","size":896},{"uid":"2f24d99c8dff927e","name":"Response Body","source":"2f24d99c8dff927e.txt","type":"text/plain","size":64}],"parameters":[],"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Refresh Token"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken"},{"name":"Response Code","value":"403"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"317482da0b053e38.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/refreshToken","403"]}