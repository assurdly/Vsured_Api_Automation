{"uid":"a9142c540318b06","name":"Register- Successful","fullName":"Auth/Register#Register- Successful","historyId":"ea93f0fd-6b0f-492e-b6c8-3b5d739a8a1a","time":{"start":1706701826871,"stop":1706701857053,"duration":30182},"status":"failed","statusMessage":"Verify that Status code is 200, Verify that status returns Success, Verify that message returns Successfully registered user, Verify that data exist","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 200, Verify that status returns Success, Verify that message returns Successfully registered user, Verify that data exist","steps":[{"name":"Verify that Status code is 200","time":{"start":1706701857043,"stop":1706701857043,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 503","statusTrace":"Error: expected response to have status code 200 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that status returns Success","time":{"start":1706701857045,"stop":1706701857045,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that message returns Successfully registered user","time":{"start":1706701857046,"stop":1706701857046,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"Verify that data exist","time":{"start":1706701857048,"stop":1706701857048,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true}],"attachments":[{"uid":"ab606403c9db4b87","name":"Request Headers","source":"ab606403c9db4b87.json","type":"application/json","size":354},{"uid":"cbf02bdfb0e77cc0","name":"Request Body","source":"cbf02bdfb0e77cc0.txt","type":"text/plain","size":336},{"uid":"b82f3a7c5e909720","name":"Response Headers","source":"b82f3a7c5e909720.json","type":"application/json","size":782},{"uid":"91f090e6373ab8bb","name":"Response Body","source":"91f090e6373ab8bb.txt","type":"text/plain","size":506}],"parameters":[],"attachmentStep":false,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a9142c540318b06.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register","503"]}