{"uid":"96004be50ffd2efd","name":"Register-Empty Email field","fullName":"Auth/Register#Register-Empty Email field","historyId":"6e0e84db-a850-432e-84f7-b038d5b3d251","time":{"start":1708205878761,"stop":1708205879027,"duration":266},"status":"failed","statusMessage":"Verify that Status code is 200, Verify that status returns Success, Verify that message returns Successfully registered user, Verify that data exist","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 200, Verify that status returns Success, Verify that message returns Successfully registered user, Verify that data exist","steps":[{"name":"Verify that Status code is 200","time":{"start":1708205879022,"stop":1708205879022,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 503","statusTrace":"Error: expected response to have status code 200 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Verify that status returns Success","time":{"start":1708205879023,"stop":1708205879023,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Verify that message returns Successfully registered user","time":{"start":1708205879024,"stop":1708205879024,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"Verify that data exist","time":{"start":1708205879025,"stop":1708205879025,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"c3006a81a5f5fd86","name":"ConsoleLogs","source":"c3006a81a5f5fd86.txt","type":"text/plain","size":162},{"uid":"fe4d2476e4b7e98a","name":"Request Headers","source":"fe4d2476e4b7e98a.json","type":"application/json","size":315},{"uid":"edd34a7e1b51bd01","name":"Response Headers","source":"edd34a7e1b51bd01.json","type":"application/json","size":774},{"uid":"1da3a42813bd694c","name":"Response Body","source":"1da3a42813bd694c.txt","type":"text/plain","size":506}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"96004be50ffd2efd.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register","503"]}