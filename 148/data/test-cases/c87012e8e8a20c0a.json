{"uid":"c87012e8e8a20c0a","name":"Register-Empty Date of Birth Field","fullName":"Auth/Register#Register-Empty Date of Birth Field","historyId":"b90baf8c-2bc4-4587-83df-2fc5af17335d","time":{"start":1708207683948,"stop":1708207684027,"duration":79},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Date of Birth is required, Verify that path returns DOB","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that type returns field, Verify that message returns Date of Birth is required, Verify that path returns DOB","steps":[{"name":"Verify that Status code is 400","time":{"start":1708207684021,"stop":1708207684021,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"Error: expected response to have status code 400 but got 503\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that type returns field","time":{"start":1708207684022,"stop":1708207684022,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that message returns Date of Birth is required","time":{"start":1708207684023,"stop":1708207684023,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Verify that path returns DOB","time":{"start":1708207684024,"stop":1708207684024,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<!DOCTYPE html>\n^","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[{"uid":"77433b77786aa406","name":"ConsoleLogs","source":"77433b77786aa406.txt","type":"text/plain","size":162},{"uid":"e17ca48edbce91a4","name":"Request Headers","source":"e17ca48edbce91a4.json","type":"application/json","size":315},{"uid":"385d92d75101feda","name":"Response Headers","source":"385d92d75101feda.json","type":"application/json","size":774},{"uid":"1c5581448e0999e3","name":"Response Body","source":"1c5581448e0999e3.txt","type":"text/plain","size":506}],"parameters":[],"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"suite","value":"Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c87012e8e8a20c0a.json","parameterValues":["POST - https://vsured-4c2a3d0f8868.herokuapp.com/api/register","503"]}